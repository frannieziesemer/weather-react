{"version":3,"sources":["Components/FormatDate.js","Components/Icon.js","Components/WeatherTemperature.js","Components/WeatherData.js","Components/WeatherForecast.js","Components/Weather.js","index.js","App.js"],"names":["FormatDate","props","day","date","getDay","hours","getHours","minutes","getMinutes","Icon","iconSize","icon","code","color","size","animate","WeatherTemperature","useState","unit","setUnit","className","celcius","href","onClick","event","preventDefault","Math","round","WeatherData","city","weather","timestamp","temperature","description","humidity","wind","loaded","setLoaded","forecast","setForecast","name","list","slice","map","forecastData","formatTime","Date","dt","main","temp","apiUrl","axios","get","then","response","data","console","log","Weather","defaultCity","setCity","setWeather","search","url","process","searchWeather","maximumTemp","temp_max","minimumTemp","temp_min","speed","form","onSubmit","type","placeholder","onChange","target","value","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ace8bf8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\n\nexport default function FormatDate(props) {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  let day = days[props.date.getDay()];\n  let hours = props.date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n\n  let minutes = props.date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n\n  return (\n    <div>\n      Last updated: {day} {hours}:{minutes}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nexport default function Icon(props) {\n  let iconSize = props.iconSize;\n\n  const codeMapping = {\n    \"01d\": \"CLEAR_DAY\",\n    \"01n\": \"CLEAR_NIGHT\",\n    \"02d\": \"PARTLY_CLOUDY_DAY\",\n    \"02n\": \"PARTLY_CLOUDY_NIGHT\",\n    \"03d\": \"CLOUDY\",\n    \"03n\": \"CLOUDY\",\n    \"04d\": \"CLOUDY\",\n    \"04n\": \"CLOUDY\",\n    \"09d\": \"RAIN\",\n    \"09n\": \"RAIN\",\n    \"10d\": \"RAIN\",\n    \"10n\": \"RAIN\",\n    \"11d\": \"RAIN\",\n    \"11n\": \"RAIN\",\n    \"13d\": \"SNOW\",\n    \"13n\": \"SNOW\",\n    \"50d\": \"FOG\",\n    \"50n\": \"FOG\"\n  };\n  return (\n    <ReactAnimatedWeather\n      icon={codeMapping[props.code]}\n      color=\"#253605\"\n      size={iconSize}\n      animate=\"true\"\n    />\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./WeatherTemperature.css\";\n\nexport default function WeatherTemperature(props) {\n  const [unit, setUnit] = useState(\"celcius\");\n\n  function displayCelcius(event) {\n    event.preventDefault();\n    setUnit(\"celcius\");\n  }\n\n  function displayFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  function convertFahrenheit() {\n    return (props.celcius * 9) / 5 + 32;\n  }\n\n  if (unit === \"celcius\") {\n    return (\n      <div className=\"temperature\">\n        <h3> {props.celcius} </h3>\n        <div className=\"degreesSelection \">\n          °C |\n          <a href=\"/\" onClick={displayFahrenheit}>\n            °F\n          </a>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"temperature\">\n        <h3> {Math.round(convertFahrenheit())} </h3>\n        <div className=\"degreesSelection \">\n          <a href=\"/\" onClick={displayCelcius}>\n            °C\n          </a>{\" \"}\n          | °F\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./WeatherData.css\";\nimport FormatDate from \"./FormatDate\";\nimport Icon from \"./Icon\";\nimport WeatherTemperature from \"./WeatherTemperature\";\n\nexport default function WeatherData(props) {\n  return (\n    <div className=\"WeatherData\">\n      <div>\n        <h1 className=\"location\"> {props.city} </h1>\n        <FormatDate date={props.weather.timestamp} />\n      </div>\n\n      <div className=\"row currentInfo\">\n        <div className=\"col-sm-4\">\n          <WeatherTemperature celcius={props.weather.temperature} />\n        </div>\n        <div className=\"col-sm-4 currentIcon\">\n          <Icon code={props.weather.icon} iconSize={84} />\n        </div>\n        <div className=\"col-sm-4  currentData\">\n          <ul>\n            <li className=\"weatherDescription\">\n              {\" \"}\n              {props.weather.description}{\" \"}\n            </li>\n\n            <li>\n              <i className=\"fas fa-tint\" />\n              <span> Humidity: {props.weather.humidity} %</span>\n            </li>\n            <li>\n              <i className=\"fas fa-wind\" />\n              <span>Wind: {props.weather.wind} km/h </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./WeatherForecast.css\";\nimport Icon from \"./Icon\";\nimport axios from \"axios\";\n\nexport default function(props) {\n  const [loaded, setLoaded] = useState(false);\n  const [forecast, setForecast] = useState(null);\n\n  function displayForecast(response) {\n    setForecast(response.data);\n    console.log(response.data);\n    setLoaded(true);\n  }\n\n  function formatTime(date) {\n    let hours = date.getHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n    let minutes = date.getMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n    return `${hours}:${minutes}`;\n  }\n\n  if (loaded && forecast.city.name === props.city) {\n    return (\n      <div className=\"WeatherForecast row\">\n        {forecast.list.slice(0, 4).map(function(forecastData) {\n          return (\n            <div className=\"col forecastBlock\">\n              <div>{formatTime(new Date(forecastData.dt * 1000))}</div>\n              <div className=\"icon\">\n                <Icon code={forecastData.weather[0].icon} iconSize={45} />\n              </div>\n              <div>{Math.round(forecastData.main.temp)} °C</div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  } else {\n    let apiKey = \"498800558a7c5bd6e9bc3ec1ccb9adfe\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  }\n}\n","import React, { useState } from \"react\";\nimport \"../index.css\";\nimport axios from \"axios\";\nimport WeatherData from \"./WeatherData.js\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.defaultCity);\n  const [weather, setWeather] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  function search() {\n    let apiKey = process.env.REACT_APP_OPEN_WEATHER_API;\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;\n    axios.get(url).then(searchWeather);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleChange(event) {\n    setCity(event.target.value);\n  }\n\n  function searchWeather(response) {\n    setWeather({\n      description: response.data.weather[0].description,\n      timestamp: new Date(response.data.dt * 1000),\n      temperature: Math.round(response.data.main.temp),\n      maximumTemp: Math.round(response.data.main.temp_max),\n      minimumTemp: Math.round(response.data.main.temp_min),\n      wind: Math.round(response.data.wind.speed),\n      icon: response.data.weather[0].icon,\n      city: response.data.name,\n      humidity: response.data.main.humidity\n    });\n    setLoaded(true);\n\n    console.log(response.data);\n  }\n\n  let form = (\n    <form className=\"search\" onSubmit={handleSubmit}>\n      <div className=\"form-row\">\n        <div className=\"searchElement col-auto\">\n          <input\n            type=\"search\"\n            className=\"form-control \"\n            placeholder=\"Search city...\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"submitButton col-auto\">\n          <button type=\"submit\" className=\"btn btn-info mb-2\">\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n\n  if (loaded) {\n    return (\n      <div className=\" weather\">\n        {form}\n        <div>\n          <WeatherData weather={weather} city={weather.city} />\n        </div>\n\n        <div>\n          <WeatherForecast weather={weather} city={weather.city} />\n        </div>\n      </div>\n    );\n  } else {\n    search();\n    return \"loading..\";\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","import React from \"react\";\nimport \"./index.css\";\nimport Weather from \"./Components/Weather\";\n\nexport default function App() {\n  return (\n    <div>\n      <div className=\"app container-fluid\">\n        <Weather defaultCity=\"Berlin\" />\n      </div>\n\n      <footer>\n        Project by Frannie Ziesemer and{\" \"}\n        <a href=\"https://github.com/frannieziesemer/weather-react\">\n          open sourced on GitHub\n        </a>\n      </footer>\n    </div>\n  );\n}\n"],"sourceRoot":""}